{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mern/ticketing/view/pages/orders/[orderId].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useRequest from '../../hooks/use-request';\n\nvar OrderShow = function OrderShow(_ref) {\n  _s();\n\n  var order = _ref.order;\n\n  var _useState = useState(''),\n      timeLeft = _useState[0],\n      setTimeLeft = _useState[1];\n\n  useEffect(function () {\n    var findTimeLeft = function findTimeLeft() {\n      var msLeft = new Date(order.expiresAt) - new Date();\n      setTimeLeft(Math.round(msLeft / 1000));\n    };\n\n    setInterval(findTimeLeft, 1000);\n  }, []);\n\n  var _useRequest = useRequest({\n    url: 'http://localhost:3005/api/payments',\n    method: 'post',\n    body: {\n      orderId: order.id,\n      token: ''\n    },\n    onSuccess: function onSuccess(payment) {\n      return console.log(payment);\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Purchasing Ticket: \", order.ticket.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Price: \", order.ticket.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Status: \", order.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Order expires in \", timeLeft, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, _this), errors, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doRequest,\n      className: \"btn btn-primary\",\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(OrderShow, \"TAeUqx6spmiKGWxrGUcfcj/3u5E=\", false, function () {\n  return [useRequest];\n});\n\n_c = OrderShow;\n\nOrderShow.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context, client) {\n    var orderId, _yield$client$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            orderId = context.query.orderId;\n            _context.next = 3;\n            return client.get(\"http://localhost:3003/api/orders/\".concat(orderId));\n\n          case 3:\n            _yield$client$get = _context.sent;\n            data = _yield$client$get.data;\n            return _context.abrupt(\"return\", {\n              order: data\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default OrderShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderShow\");","map":{"version":3,"sources":["/home/mern/ticketing/view/pages/orders/[orderId].js"],"names":["useEffect","useState","useRequest","OrderShow","order","timeLeft","setTimeLeft","findTimeLeft","msLeft","Date","expiresAt","Math","round","setInterval","url","method","body","orderId","id","token","onSuccess","payment","console","log","doRequest","errors","ticket","title","price","status","getInitialProps","context","client","query","get","data"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACCH,QAAQ,CAAC,EAAD,CADT;AAAA,MACxBI,QADwB;AAAA,MACdC,WADc;;AAG/BN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,UAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASL,KAAK,CAACM,SAAf,IAA4B,IAAID,IAAJ,EAA3C;AACAH,MAAAA,WAAW,CAACK,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAG,IAApB,CAAD,CAAX;AACD,KAHD;;AAKAK,IAAAA,WAAW,CAACN,YAAD,EAAe,IAAf,CAAX;AACD,GAPQ,EAON,EAPM,CAAT;;AAH+B,oBAcDL,UAAU,CAAC;AACvCY,IAAAA,GAAG,EAAE,oCADkC;AAEvCC,IAAAA,MAAM,EAAE,MAF+B;AAGvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAEb,KAAK,CAACc,EADX;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAHiC;AAOvCC,IAAAA,SAAS,EAAE,mBAACC,OAAD;AAAA,aAAaC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAAb;AAAA;AAP4B,GAAD,CAdT;AAAA,MAcvBG,SAduB,eAcvBA,SAduB;AAAA,MAcZC,MAdY,eAcZA,MAdY;;AAwB/B,sBAAO;AAAA,4BACL;AAAA,wCAAwBrB,KAAK,CAACsB,MAAN,CAAaC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,aADK,eAEL;AAAA,4BAAYvB,KAAK,CAACsB,MAAN,CAAaE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,aAFK,eAGL;AAAA,6BAAaxB,KAAK,CAACyB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,aAHK,eAIL;AAAA,sCAAsBxB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,aAJK,EAKJoB,MALI,eAML;AAAQ,MAAA,OAAO,EAAED,SAAjB;AAA4B,MAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANK;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAQD,CAhCD;;GAAMrB,S;UAc0BD,U;;;KAd1BC,S;;AAkCNA,SAAS,CAAC2B,eAAV;AAAA,uEAA4B,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClBf,YAAAA,OADkB,GACNc,OAAO,CAACE,KADF,CAClBhB,OADkB;AAAA;AAAA,mBAEHe,MAAM,CAACE,GAAP,4CAA+CjB,OAA/C,EAFG;;AAAA;AAAA;AAElBkB,YAAAA,IAFkB,qBAElBA,IAFkB;AAAA,6CAInB;AAAE/B,cAAAA,KAAK,EAAE+B;AAAT,aAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAehC,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport useRequest from '../../hooks/use-request';\n\nconst OrderShow = ({ order }) => {\n  const [timeLeft, setTimeLeft] = useState('');\n\n  useEffect(() => {\n    const findTimeLeft = () => {\n      const msLeft = new Date(order.expiresAt) - new Date();\n      setTimeLeft(Math.round(msLeft / 1000));\n    }\n\n    setInterval(findTimeLeft, 1000);\n  }, [])\n\n  \n\n  const { doRequest, errors } = useRequest({\n    url: 'http://localhost:3005/api/payments',\n    method: 'post',\n    body: {\n      orderId: order.id,\n      token: ''\n    },\n    onSuccess: (payment) => console.log(payment)\n  })\n\n  return <div>\n    <h1>Purchasing Ticket: {order.ticket.title}</h1>\n    <h4>Price: {order.ticket.price}</h4>\n    <h4>Status: {order.status}</h4>\n    <h4>Order expires in {timeLeft} seconds</h4>\n    {errors}\n    <button onClick={doRequest} className=\"btn btn-primary\">Pay</button>\n  </div>\n};\n\nOrderShow.getInitialProps = async (context, client) => {\n  const { orderId } = context.query;\n  const { data } = await client.get(`http://localhost:3003/api/orders/${orderId}`);\n\n  return { order: data };\n}\n\nexport default OrderShow;"]},"metadata":{},"sourceType":"module"}