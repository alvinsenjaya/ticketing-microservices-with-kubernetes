{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mern/ticketing/view/pages/orders/[orderId].js\";\nimport { useEffect, useState } from 'react';\nimport useRequest from '../../hooks/use-request';\n\nconst OrderShow = ({\n  order\n}) => {\n  const {\n    0: timeLeft,\n    1: setTimeLeft\n  } = useState('');\n  useEffect(() => {\n    const findTimeLeft = () => {\n      const msLeft = new Date(order.expiresAt) - new Date();\n      setTimeLeft(msLeft / 2000);\n    };\n  }, []);\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: 'http://localhost:3005/api/payments',\n    method: 'post',\n    body: {\n      orderId: order.id,\n      token: ''\n    },\n    onSuccess: payment => console.log(payment)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Purchasing Ticket: \", order.ticket.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Price: \", order.ticket.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Status: \", order.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Order expires in \", msLeft / 1000, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), errors, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doRequest,\n      className: \"btn btn-primary\",\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\nOrderShow.getInitialProps = async (context, client) => {\n  const {\n    orderId\n  } = context.query;\n  const {\n    data\n  } = await client.get(`http://localhost:3003/api/orders/${orderId}`);\n  return {\n    order: data\n  };\n};\n\nexport default OrderShow;","map":{"version":3,"sources":["/home/mern/ticketing/view/pages/orders/[orderId].js"],"names":["useEffect","useState","useRequest","OrderShow","order","timeLeft","setTimeLeft","findTimeLeft","msLeft","Date","expiresAt","doRequest","errors","url","method","body","orderId","id","token","onSuccess","payment","console","log","ticket","title","price","status","getInitialProps","context","client","query","data","get"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,YAAY,GAAG,MAAM;AACzB,YAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASL,KAAK,CAACM,SAAf,IAA4B,IAAID,IAAJ,EAA3C;AACAH,MAAAA,WAAW,CAACE,MAAM,GAAG,IAAV,CAAX;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AASA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBV,UAAU,CAAC;AACvCW,IAAAA,GAAG,EAAE,oCADkC;AAEvCC,IAAAA,MAAM,EAAE,MAF+B;AAGvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAEZ,KAAK,CAACa,EADX;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAHiC;AAOvCC,IAAAA,SAAS,EAAGC,OAAD,IAAaC,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAPe,GAAD,CAAxC;AAUA,sBAAO;AAAA,4BACL;AAAA,wCAAwBhB,KAAK,CAACmB,MAAN,CAAaC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAA,4BAAYpB,KAAK,CAACmB,MAAN,CAAaE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,eAGL;AAAA,6BAAarB,KAAK,CAACsB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK,eAIL;AAAA,sCAAsBlB,MAAM,GAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJK,EAKJI,MALI,eAML;AAAQ,MAAA,OAAO,EAAED,SAAjB;AAA4B,MAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQD,CA9BD;;AAgCAR,SAAS,CAACwB,eAAV,GAA4B,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACrD,QAAM;AAAEb,IAAAA;AAAF,MAAcY,OAAO,CAACE,KAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMF,MAAM,CAACG,GAAP,CAAY,oCAAmChB,OAAQ,EAAvD,CAAvB;AAEA,SAAO;AAAEZ,IAAAA,KAAK,EAAE2B;AAAT,GAAP;AACD,CALD;;AAOA,eAAe5B,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport useRequest from '../../hooks/use-request';\n\nconst OrderShow = ({ order }) => {\n  const [timeLeft, setTimeLeft] = useState('');\n\n  useEffect(() => {\n    const findTimeLeft = () => {\n      const msLeft = new Date(order.expiresAt) - new Date();\n      setTimeLeft(msLeft / 2000)\n    }\n  }, [])\n\n  \n\n  const { doRequest, errors } = useRequest({\n    url: 'http://localhost:3005/api/payments',\n    method: 'post',\n    body: {\n      orderId: order.id,\n      token: ''\n    },\n    onSuccess: (payment) => console.log(payment)\n  })\n\n  return <div>\n    <h1>Purchasing Ticket: {order.ticket.title}</h1>\n    <h4>Price: {order.ticket.price}</h4>\n    <h4>Status: {order.status}</h4>\n    <h4>Order expires in {msLeft/1000} seconds</h4>\n    {errors}\n    <button onClick={doRequest} className=\"btn btn-primary\">Pay</button>\n  </div>\n};\n\nOrderShow.getInitialProps = async (context, client) => {\n  const { orderId } = context.query;\n  const { data } = await client.get(`http://localhost:3003/api/orders/${orderId}`);\n\n  return { order: data };\n}\n\nexport default OrderShow;"]},"metadata":{},"sourceType":"module"}