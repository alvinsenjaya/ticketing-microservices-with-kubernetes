{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mern/ticketing/view/hooks/use-request.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nexport default _s(function (url, method, body) {\n  _s();\n\n  var _useState = useState(null),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var doRequest = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setErrors(null);\n              _context.next = 4;\n              return axios[method](url, body);\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              setErrors( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-danger\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Oops...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 14,\n                  columnNumber: 11\n                }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"my-0\",\n                  children: _context.t0.data.errors.map(function (err) {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: err.message\n                    }, err.message, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 17,\n                      columnNumber: 15\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 15,\n                  columnNumber: 11\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 9\n              }, _this));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function doRequest() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    doRequest: doRequest,\n    errors: errors\n  };\n}, \"CBiIfGMAaAtFFE/cKx87b00YZJU=\");","map":{"version":3,"sources":["/home/mern/ticketing/view/hooks/use-request.js"],"names":["axios","useState","url","method","body","errors","setErrors","doRequest","response","data","map","err","message"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,kBAAe,UAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAuB;AAAA;;AAAA,kBACRH,QAAQ,CAAC,IAAD,CADA;AAAA,MAC7BI,MAD6B;AAAA,MACrBC,SADqB;;AAEpC,MAAMC,SAAS;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdD,cAAAA,SAAS,CAAC,IAAD,CAAT;AAFc;AAAA,qBAGSN,KAAK,CAACG,MAAD,CAAL,CAAcD,GAAd,EAAmBE,IAAnB,CAHT;;AAAA;AAGRI,cAAAA,QAHQ;AAAA,+CAIPA,QAAQ,CAACC,IAJF;;AAAA;AAAA;AAAA;AAMdH,cAAAA,SAAS,eACP;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAI,kBAAA,SAAS,EAAC,MAAd;AAAA,4BACG,YAAIG,IAAJ,CAASJ,MAAT,CAAgBK,GAAhB,CAAoB,UAAAC,GAAG;AAAA,wCACtB;AAAA,gCAAuBA,GAAG,CAACC;AAA3B,uBAASD,GAAG,CAACC,OAAb;AAAA;AAAA;AAAA;AAAA,6BADsB;AAAA,mBAAvB;AADH;AAAA;AAAA;AAAA;AAAA,yBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,uBADO,CAAT;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATL,SAAS;AAAA;AAAA;AAAA,KAAf;;AAmBA,SAAO;AAAEA,IAAAA,SAAS,EAATA,SAAF;AAAaF,IAAAA,MAAM,EAANA;AAAb,GAAP;AACD,CAtBD","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\nexport default (url, method, body) => {\n  const [errors, setErrors] = useState(null);\n  const doRequest = async () => {\n    try{\n      setErrors(null);\n      const response = await axios[method](url, body);\n      return response.data;\n    } catch (err) {\n      setErrors(\n        <div className=\"alert alert-danger\">\n          <h4>Oops...</h4>\n          <ul className=\"my-0\">\n            {err.data.errors.map(err => \n              <li key={err.message}>{err.message}</li>\n            )}\n          </ul>\n        </div>\n      );\n    }\n  };\n\n  return { doRequest, errors };\n}"]},"metadata":{},"sourceType":"module"}