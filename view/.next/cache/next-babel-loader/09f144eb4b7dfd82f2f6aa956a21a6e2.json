{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mern/ticketing/view/pages/orders/[orderId].js\";\nimport { useEffect, useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport useRequest from '../../hooks/use-request';\n\nconst OrderShow = ({\n  order\n}) => {\n  const {\n    0: timeLeft,\n    1: setTimeLeft\n  } = useState(0);\n  useEffect(() => {\n    const findTimeLeft = () => {\n      const msLeft = new Date(order.expiresAt) - new Date();\n      setTimeLeft(Math.round(msLeft / 1000));\n    };\n\n    findTimeLeft();\n    const timerId = setInterval(findTimeLeft, 1000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [order]);\n\n  if (timeLeft < 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Purchasing ticket: \", order.ticket.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Price: \", order.ticket.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Status: expired\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: 'http://localhost:3005/api/payments',\n    method: 'post',\n    body: {\n      orderId: order.id,\n      token: ''\n    },\n    onSuccess: payment => console.log(payment)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Purchasing ticket: \", order.ticket.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Price: \", order.ticket.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Status: \", order.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Time left to pay: \", timeLeft, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), errors, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doRequest,\n      className: \"btn btn-primary\",\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StripeCheckout, {\n      token: token => console.log(token),\n      stripeKey: \"pk_test_51HjfSGCqMWa1qdglzeLhiZWGtZ9shLXPB57hMl0gLylzoviCEszpv6u4um8De4QRZ8oQRrnZbGUA5393x2QYd4uy00C0ssLfBE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\nOrderShow.getInitialProps = async (context, client) => {\n  const {\n    orderId\n  } = context.query;\n  const {\n    data\n  } = await client.get(`http://localhost:3003/api/orders/${orderId}`);\n  return {\n    order: data\n  };\n};\n\nexport default OrderShow;","map":{"version":3,"sources":["/home/mern/ticketing/view/pages/orders/[orderId].js"],"names":["useEffect","useState","StripeCheckout","useRequest","OrderShow","order","timeLeft","setTimeLeft","findTimeLeft","msLeft","Date","expiresAt","Math","round","timerId","setInterval","clearInterval","ticket","title","price","doRequest","errors","url","method","body","orderId","id","token","onSuccess","payment","console","log","status","getInitialProps","context","client","query","data","get"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\n\nimport useRequest from '../../hooks/use-request';\n\nconst OrderShow = ({ order }) => {\n  const [timeLeft, setTimeLeft] = useState(0);\n\n  useEffect(() => {\n    const findTimeLeft = () => {\n      const msLeft = new Date(order.expiresAt) - new Date();\n\n      setTimeLeft(Math.round(msLeft / 1000));\n    }\n\n    findTimeLeft();\n    const timerId = setInterval(findTimeLeft, 1000);\n\n    return () => {\n      clearInterval(timerId);\n    }\n  }, [order])\n\n  if(timeLeft < 0){\n    return <div>\n      <h1>Purchasing ticket: {order.ticket.title}</h1>\n      <h4>Price: {order.ticket.price}</h4>\n      <h4>Status: expired</h4>\n    </div>\n  }\n\n  const { doRequest, errors } = useRequest({\n    url: 'http://localhost:3005/api/payments',\n    method: 'post',\n    body: {\n      orderId: order.id,\n      token: ''\n    },\n    onSuccess: (payment) => console.log(payment)\n  })\n\n  return <div>\n    <h1>Purchasing ticket: {order.ticket.title}</h1>\n    <h4>Price: {order.ticket.price}</h4>\n    <h4>Status: {order.status}</h4>\n    <h4>Time left to pay: {timeLeft} seconds</h4>\n    {errors}\n    <button onClick={doRequest} className=\"btn btn-primary\">Pay</button>\n    <StripeCheckout\n      token={(token => console.log(token))}\n      stripeKey=\"pk_test_51HjfSGCqMWa1qdglzeLhiZWGtZ9shLXPB57hMl0gLylzoviCEszpv6u4um8De4QRZ8oQRrnZbGUA5393x2QYd4uy00C0ssLfBE\"\n    />\n  </div>\n};\n\nOrderShow.getInitialProps = async (context, client) => {\n  const { orderId } = context.query;\n  const { data } = await client.get(`http://localhost:3003/api/orders/${orderId}`);\n\n  return { order: data };\n}\n\nexport default OrderShow;"]},"metadata":{},"sourceType":"module"}