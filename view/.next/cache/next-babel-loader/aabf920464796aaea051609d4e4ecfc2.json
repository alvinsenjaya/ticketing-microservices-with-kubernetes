{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mern/ticketing/view/pages/tickets/[ticketId].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport useRequest from '../../hooks/use-request';\n\nvar TicketShow = function TicketShow(_ref) {\n  _s();\n\n  var ticket = _ref.ticket;\n\n  var _useRequest = useRequest({}),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: ticket.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Price: \", ticket.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"Purchase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(TicketShow, \"TJmWqLTkcyMEjC4U6ZF+i+LMXfQ=\", false, function () {\n  return [useRequest];\n});\n\n_c = TicketShow;\n\nTicketShow.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context, client) {\n    var ticketId, _yield$client$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ticketId = context.query.ticketId;\n            _context.next = 3;\n            return client.get(\"http://localhost:3002/api/tickets/\".concat(ticketId));\n\n          case 3:\n            _yield$client$get = _context.sent;\n            data = _yield$client$get.data;\n            return _context.abrupt(\"return\", {\n              ticket: data\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default TicketShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicketShow\");","map":{"version":3,"sources":["/home/mern/ticketing/view/pages/tickets/[ticketId].js"],"names":["useRequest","TicketShow","ticket","doRequest","errors","title","price","getInitialProps","context","client","ticketId","query","get","data"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,oBACHF,UAAU,CAAC,EAAD,CADP;AAAA,MACzBG,SADyB,eACzBA,SADyB;AAAA,MACdC,MADc,eACdA,MADc;;AAKjC,sBAAO;AAAA,4BACL;AAAA,gBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,aADK,eAEL;AAAA,4BAAYH,MAAM,CAACI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,aAFK,eAGL;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHK;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAKD,CAVD;;GAAML,U;UAC0BD,U;;;KAD1BC,U;;AAYNA,UAAU,CAACM,eAAX;AAAA,uEAA6B,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,QADmB,GACNF,OAAO,CAACG,KADF,CACnBD,QADmB;AAAA;AAAA,mBAEJD,MAAM,CAACG,GAAP,6CAAgDF,QAAhD,EAFI;;AAAA;AAAA;AAEnBG,YAAAA,IAFmB,qBAEnBA,IAFmB;AAAA,6CAIpB;AAAEX,cAAAA,MAAM,EAAEW;AAAV,aAJoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeZ,UAAf","sourcesContent":["import useRequest from '../../hooks/use-request';\n\nconst TicketShow = ({ ticket }) => {\n  const { doRequest, errors } = useRequest({\n    \n  })\n\n  return <div>\n    <h1>{ticket.title}</h1>\n    <h4>Price: {ticket.price}</h4>\n    <button className=\"btn btn-primary\">Purchase</button>\n  </div>\n};\n\nTicketShow.getInitialProps = async (context, client) => {\n  const { ticketId } = context.query;\n  const { data } = await client.get(`http://localhost:3002/api/tickets/${ticketId}`);\n\n  return { ticket: data };\n}\n\nexport default TicketShow;"]},"metadata":{},"sourceType":"module"}