{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mern/ticketing/view/pages/tickets/edit/[ticketId].js\";\nimport { useState } from 'react';\nimport Router from 'next/router';\nimport useRequest from '../../../hooks/use-request';\n\nconst EditTicket = ({\n  ticket\n}) => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState(ticket.title);\n  const {\n    0: price,\n    1: setPrice\n  } = useState(ticket.price);\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: `http://localhost:3002/api/tickets/${ticket.id}`,\n    method: 'put',\n    body: {\n      title,\n      price\n    },\n    onSuccess: () => Router.push('/orders')\n  });\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    await doRequest();\n  };\n\n  const onBlur = () => {\n    const value = parseFloat(price);\n\n    if (isNaN(value)) {\n      return;\n    }\n\n    setPrice(value.toFixed(2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit a Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: price,\n          onBlur: onBlur,\n          onChange: e => setPrice(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), errors, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nEditTicket.getInitialProps = async (context, client) => {\n  const {\n    ticketId\n  } = context.query;\n  const {\n    data\n  } = await client.get(`http://localhost:3002/api/tickets/${ticketId}`);\n  return {\n    ticket: data\n  };\n};\n\nexport default EditTicket;","map":{"version":3,"sources":["/home/mern/ticketing/view/pages/tickets/edit/[ticketId].js"],"names":["useState","Router","useRequest","EditTicket","ticket","title","setTitle","price","setPrice","doRequest","errors","url","id","method","body","onSuccess","push","onSubmit","event","preventDefault","onBlur","value","parseFloat","isNaN","toFixed","e","target","getInitialProps","context","client","ticketId","query","data","get"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAACI,MAAM,CAACC,KAAR,CAAlC;AACA,QAAM;AAAA,OAACE,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAACI,MAAM,CAACG,KAAR,CAAlC;AAEA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBR,UAAU,CAAC;AACvCS,IAAAA,GAAG,EAAG,qCAAoCP,MAAM,CAACQ,EAAG,EADb;AAEvCC,IAAAA,MAAM,EAAE,KAF+B;AAGvCC,IAAAA,IAAI,EAAE;AACJT,MAAAA,KADI;AAEJE,MAAAA;AAFI,KAHiC;AAOvCQ,IAAAA,SAAS,EAAE,MAAMd,MAAM,CAACe,IAAP,CAAY,SAAZ;AAPsB,GAAD,CAAxC;;AAUA,QAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMV,SAAS,EAAf;AACD,GAJD;;AAMA,QAAMW,MAAM,GAAG,MAAM;AACnB,UAAMC,KAAK,GAAGC,UAAU,CAACf,KAAD,CAAxB;;AAEA,QAAGgB,KAAK,CAACF,KAAD,CAAR,EAAiB;AACf;AACD;;AAEDb,IAAAA,QAAQ,CAACa,KAAK,CAACG,OAAN,CAAc,CAAd,CAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEP,QAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,KAAK,EAAEZ,KADT;AAEE,UAAA,QAAQ,EAAGoB,CAAD,IAAOnB,QAAQ,CAACmB,CAAC,CAACC,MAAF,CAASL,KAAV,CAF3B;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,KAAK,EAAEd,KADT;AAEE,UAAA,MAAM,EAAEa,MAFV;AAGE,UAAA,QAAQ,EAAGK,CAAD,IAAOjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASL,KAAV,CAH3B;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAkBGX,MAlBH,eAmBE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAxDD;;AA0DAP,UAAU,CAACwB,eAAX,GAA6B,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAeF,OAAO,CAACG,KAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMH,MAAM,CAACI,GAAP,CAAY,qCAAoCH,QAAS,EAAzD,CAAvB;AAEA,SAAO;AAAE1B,IAAAA,MAAM,EAAE4B;AAAV,GAAP;AACD,CALD;;AAOA,eAAe7B,UAAf","sourcesContent":["import { useState } from 'react';\nimport Router from 'next/router';\nimport useRequest from '../../../hooks/use-request';\n\nconst EditTicket = ({ ticket }) => {\n  const [title, setTitle] = useState(ticket.title);\n  const [price, setPrice] = useState(ticket.price);\n\n  const { doRequest, errors } = useRequest({\n    url: `http://localhost:3002/api/tickets/${ticket.id}`,\n    method: 'put',\n    body: {\n      title,\n      price\n    },\n    onSuccess: () => Router.push('/orders')\n  });\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    await doRequest();\n  }\n\n  const onBlur = () => {\n    const value = parseFloat(price);\n\n    if(isNaN(value)) {\n      return;\n    }\n\n    setPrice(value.toFixed(2));\n  }\n\n  return (\n    <div>\n      <h1>Edit a Ticket</h1>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label>Title</label>\n          <input\n            value={title} \n            onChange={(e) => setTitle(e.target.value)} \n            className=\"form-control\"> \n          </input>\n        </div>\n        <div className=\"form-group\">\n          <label>Price</label>\n          <input\n            value={price}\n            onBlur={onBlur}\n            onChange={(e) => setPrice(e.target.value)} \n            className=\"form-control\">\n          </input>\n        </div>\n        {errors}\n        <button className=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nEditTicket.getInitialProps = async (context, client) => {\n  const { ticketId } = context.query;\n  const { data } = await client.get(`http://localhost:3002/api/tickets/${ticketId}`);\n\n  return { ticket: data };\n}\n\nexport default EditTicket;"]},"metadata":{},"sourceType":"module"}